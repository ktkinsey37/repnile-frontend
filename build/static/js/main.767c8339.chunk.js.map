{"version":3,"sources":["Images/image0.jpeg","AssortedSinglePages/HomePage.js","UserContext.js","BrowserRoutesComponents/NavBar.js","api.js","AnimalComponents/AnimalSearchForm.js","AnimalComponents/AnimalCard.js","AnimalComponents/AnimalsPage.js","AnimalComponents/AnimalAddForm.js","MessagesComponents/MessagesPage.js","ItemComponents/ItemSearchForm.js","ItemComponents/ItemCard.js","ItemComponents/ItemsPage.js","ItemComponents/Item.js","AnimalComponents/Animal.js","AdminRoutes/LoginForm.js","hooks/useLocalStorage.js","MessagesComponents/Message.js","MessagesComponents/OwnerMessageSender.js","MessagesComponents/UserMessageThread.js","MessagesComponents/UserMessageSender.js","MessagesComponents/MessageThread.js","AnimalComponents/AnimalEditForm.js","AssortedSinglePages/TermsOfService.js","EventsComponents/EventCard.js","EventsComponents/EventsPage.js","EventsComponents/Event.js","EventsComponents/EventAdd.js","ItemComponents/ItemAddForm.js","AssortedSinglePages/About.js","ItemComponents/ItemEditForm.js","AnimalComponents/AnimalAddParentage.js","BrowserRoutesComponents/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","className","src","image0","class","UserContext","React","createContext","user","undefined","NavBar","logout","useContext","username","expand","href","navbar","to","onClick","BASE_URL","process","RepnileApi","endpoint","data","method","file","console","debug","url","headers","Authorization","token","log","params","axios","error","response","message","Array","isArray","this","imageName","formData","request","res","returnVal","id","animal","animals","parentId","childId","parent","child","weight","String","items","term","uuid","events","AnimalSearchForm","search","INITIAL_STATE","useState","setFormData","handleChange","evt","target","name","value","fData","onSubmit","preventDefault","onChange","placeholder","species","colorationPattern","primaryColor","secondaryColor","age","price","AnimalCard","isLoading","forSale","getImage","imgUrl","alt","width","height","AnimalsPage","setIsLoading","setAnimals","a","getAnimalsQuery","useEffect","getAllAnimals","getAnimals","map","AddAnimalForm","navigate","useNavigate","setFile","birthDate","sex","formErrors","setFormErrors","handleSubmit","newFormData","FormData","Object","entries","forEach","k","v","append","addAnimal","result","errors","type","checked","accept","e","files","multiple","MessagesPage","messageThreads","setMessageThreads","deleteMessageThread","getAllMessageThreads","messages","getMessageThreads","style","thread","handleRemove","ItemSearchForm","ItemCard","item","ItemsPage","setItems","getItemsQuery","getAllItems","getItems","Item","useParams","setItem","getItem","description","stock","Animal","setAnimal","parents","setParents","getAnimal","getAnimalParentage","parentIds","parentsIds","i","length","push","birth_date","LoginForm","login","password","htmlFor","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","stringify","state","setState","Message","sender","recipient","createdAt","messageText","OwnerMessageSender","messageThread","postMessage","UserMessageThread","setMessageThread","setMessages","getMessageThread","updatedAt","lastCheckedAt","MessageSender","msgId","setMsgId","newMsgId","MessageThread","AnimalEditForm","updateAnimal","TermsOfService","EventCard","event","title","date","EventsPage","setEvents","getEvents","Event","setEvent","getEvent","EventAddForm","addEvent","ItemAddForm","addItem","About","ItemEditForm","updateItem","AnimalAddParentage","setParent","setChild","addAnimalParentage","AppRoutes","exact","path","element","cantFind","EventAdd","UserMessageSender","App","currUser","setCurrUser","currToken","setCurrToken","userData","loginUser","clear","logoutUser","addToken","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.767c8339.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image0.b4e5ca85.jpeg\";","import React, { useState } from \"react\";\r\nimport image0 from \"../Images/image0.jpeg\"\r\nimport \"./HomePage.css\"\r\n\r\nconst HomePage = () => {\r\n\r\n \r\n    return (\r\n    <div className=\"homePageMain\">\r\n      <div className=\"homepageContainer text-center homepage\">\r\n        <img className=\"homeImage\" src={image0}>\r\n        </img>\r\n        <div class=\"centered\">\r\n          <h1 class=\"font-weight-bold\">Repnile Exotics</h1>\r\n          <h4>All your reptile needs in one convenient place</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({user: undefined});\r\n\r\nexport default UserContext;\r\n","import React, {useContext} from \"react\";\r\nimport \"./NavBar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav,\r\n    NavbarBrand,\r\n    NavItem} from \"reactstrap\";\r\nimport UserContext from \"../UserContext\";\r\n\r\n\r\nfunction NavBar({ logout }) {\r\n\r\n\r\n  const user = useContext(UserContext)\r\n\r\n  if (user.username == undefined){\r\n\r\n    // Need to remove the login bar later and just have it as a route dina can hit\r\n  return (\r\n    <div>\r\n    <Navbar expand=\"md navbar2 justify-content-center\">\r\n      <NavbarBrand href=\"/\">Repnile</NavbarBrand>\r\n      <Nav className=\"m-auto\" navbar>\r\n        <NavItem>\r\n          <NavLink to=\"/messages/send\">Contact Us</NavLink>\r\n        </NavItem>\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        <NavItem>\r\n          <NavLink to=\"/animals\">Animals</NavLink>\r\n        </NavItem>\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        <NavItem>\r\n          <NavLink to=\"/items\">Items</NavLink>            \r\n        </NavItem>\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        <NavItem>\r\n          <NavLink to=\"/events\">Upcoming Events</NavLink>            \r\n        </NavItem>\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        <NavItem>\r\n          <NavLink to=\"/terms_of_service\">Terms of Service</NavLink>            \r\n        </NavItem>\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        &nbsp;\r\n        <NavItem>\r\n          <NavLink to=\"/about\">About Us</NavLink>            \r\n        </NavItem>\r\n      </Nav>\r\n    </Navbar>\r\n  </div>\r\n  );}\r\n\r\n\r\n// Need to hardcode that in\r\n  else if (user.username == \"test\"){\r\n      return (\r\n    <div>\r\n      <Navbar expand=\"md navbar2 justify-content-center\">\r\n        <NavbarBrand href=\"/\">Repnile</NavbarBrand>\r\n        <Nav className=\"m-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink to=\"/messages\">Messages</NavLink>\r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/animals\">Animals</NavLink>\r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/animals/add\">Add Animal</NavLink>\r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/animals/parentage\">Add Parentage</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/items\">Items</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/items/add\">Add Item</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/events\">Upcoming Events</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/events/add\">Add Event</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/terms_of_service\">Terms of Service</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/about\">About Us</NavLink>            \r\n          </NavItem>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          <NavItem>\r\n            <NavLink to=\"/\" onClick={logout}>Logout</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n  }\r\n\r\n  // instead of\r\n//   <NavItem>\r\n//   <NavLink to=\"/home\">Logout</NavLink>\r\n// </NavItem>\r\n// have a \r\n\r\n  else {\r\n    return (\r\n      <div>\r\n        <Navbar expand=\"md\">\r\n          <NavbarBrand href=\"/\">Jobly</NavbarBrand>\r\n  \r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/companies\">Companies IF HITTING THIS ROUTE ITS A USERNAME OR SMTH ERROR</NavLink>            \r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/jobs\">Jobs</NavLink>            \r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/profile\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/logout\">Logout</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n\r\n    // I need to take out the else block above and replace it with an error. if the uname isnt dina or undefined its a breach\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n\r\n/** API Class.\r\n *\r\n * Static class tying together methods used to get/send to to the API.\r\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\r\n * be any API-aware stuff elsewhere in the frontend.\r\n *\r\n */\r\n\r\nclass RepnileApi {\r\n  // the token for interactive with the API will be stored here.\r\n  static token;\r\n\r\n  static async request(endpoint, data = {}, method = \"get\", file = false) {\r\n    console.debug(\"API Call:\", endpoint, data, method);\r\n\r\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\r\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\r\n    const url = `${BASE_URL}/${endpoint}`;\r\n    const headers = {\r\n      Authorization: `Bearer ${RepnileApi.token}`,\r\n    };\r\n    if (file) {\r\n      console.log(\"HERE\");\r\n    }\r\n    const params = method === \"get\" ? data : {};\r\n\r\n    try {\r\n      return (await axios({ url, method, data, params, headers })).data;\r\n    } catch (err) {\r\n      console.error(\"API Error:\", err.response);\r\n      let message = err.response.data.error.message;\r\n      throw Array.isArray(message) ? message : [message];\r\n    }\r\n  }\r\n\r\n  // Individual API routes\r\n\r\n  /** Get details on a company by handle. */\r\n\r\n  static addToken(token) {\r\n    this.token = token;\r\n  }\r\n  static getImage(imageName) {\r\n    return BASE_URL + \"/\" + imageName;\r\n  }\r\n  static async loginUser(formData) {\r\n    let res = await this.request(\"auth/token\", formData, \"post\");\r\n    const returnVal = { username: formData.username, token: res.token };\r\n    this.token = res.token;\r\n    return returnVal;\r\n  }\r\n\r\n  static async logoutUser() {\r\n    this.token = undefined;\r\n  }\r\n\r\n  static async getAnimal(id) {\r\n    console.log(id, \"this is id in repnileapi\");\r\n    let res = await this.request(`animals/${id}`);\r\n    console.log(res, \"this is res in getanimal in repnileapi\");\r\n    return res.animal;\r\n  }\r\n\r\n  static async getAllAnimals() {\r\n    let res = await this.request(\"animals\");\r\n    console.log(typeof res.animals, \"typeof res.animals\");\r\n    return res.animals;\r\n  }\r\n\r\n  static async getAnimalsQuery(params) {\r\n    console.log(params, \"params in getanimalsquery\");\r\n    let res = await this.request(\"animals\", params);\r\n    return res.animals;\r\n  }\r\n\r\n  static async addAnimal(formData) {\r\n    console.log(formData, \"formData addanimal in api\");\r\n    let res = await this.request(\"animals\", formData, \"post\", true);\r\n    console.log(res, \"this is res in api\");\r\n    return res;\r\n  }\r\n\r\n  static async addAnimalParentage(parentId, childId){\r\n    let data = {}\r\n    data.parent=parentId\r\n    data.child=childId\r\n    let res = await this.request(\"animals/parents\", data, \"post\")\r\n    console.log(res, \"this is ids in api.addparents\")\r\n    return res;\r\n  }\r\n\r\n  static async getAnimalParentage(id){\r\n    let res = await this.request(`animals/${id}/parents`, id)\r\n    console.log(res, \"this is res in api.getanimalparentage\")\r\n    if (!res) return undefined;\r\n    return res;\r\n  }\r\n\r\n  static async updateAnimal(formData, id) {\r\n    formData.weight = String(formData.weight);\r\n    console.log(formData, \"this is formdata in updateanimal\");\r\n    let res = await this.request(`animals/${id}`, formData, \"patch\");\r\n    return res;\r\n  }\r\n\r\n  static async addItem(formData) {\r\n    let res = await this.request(\"items\", formData, \"post\", true);\r\n    return res;\r\n  }\r\n\r\n  static async getItem(id) {\r\n    let res = await this.request(`items/${id}`);\r\n    console.log(res, \"res in api\")\r\n    return res;\r\n  }\r\n\r\n  static async getAllItems() {\r\n    let res = await this.request(\"items\");\r\n    return res.items;\r\n  }\r\n\r\n  static async getAItemsQuery(term) {\r\n    let res = await this.request(\"items\", term);\r\n    return res.items;\r\n  }\r\n\r\n  static async updateItem(formData, id) {\r\n    // formData.weight = String(formData.weight);\r\n    // console.log(formData, \"this is formdata in updateanimal\");\r\n    let res = await this.request(`items/${id}`, formData, \"patch\");\r\n    return res;\r\n  }\r\n\r\n  static async getAllMessageThreads() {\r\n    let res = await this.request(\"messages\");\r\n    return res;\r\n  }\r\n\r\n  static async getMessageThread(id) {\r\n    let res = await this.request(`messages/${id}`);\r\n    return res;\r\n  }\r\n\r\n  static async postMessage(formData) {\r\n    let res = await this.request(\"messages\", formData, \"post\");\r\n    return;\r\n  }\r\n\r\n  static async deleteMessageThread(uuid) {\r\n    let res = await this.request(`messages/${uuid}`, uuid, \"delete\");\r\n    console.log(res, \"this is res in deletemessagethread in the repnile.api\");\r\n  }\r\n\r\n  static async addEvent(formData) {\r\n    let res = await this.request(\"events\", formData, \"post\");\r\n    return res;\r\n  }\r\n\r\n  static async getEvent(id) {\r\n    let res = await this.request(`events/${id}`);\r\n    return res;\r\n  }\r\n\r\n  static async getEvents() {\r\n    let res = await this.request(\"events\");\r\n    // console.log(typeof res.animals, \"typeof res.animals\");\r\n    return res.events;\r\n  }\r\n\r\n  static async updateEvent(formData, id) {\r\n    // formData.weight = String(formData.weight);\r\n    // console.log(formData, \"this is formdata in updateanimal\");\r\n    let res = await this.request(`events/${id}`, formData, \"patch\");\r\n    return res;\r\n  }\r\n\r\n  static async deleteEvent(id) {\r\n    let res = await this.request(`events/${id}`, id, \"delete\");\r\n    console.log(res, \"this is res in deleteevents in the repnile.api\");\r\n    return;\r\n  }\r\n\r\n  //   static async registerUser(formData){\r\n  //     let res = await this.request(\"auth/register\", formData, \"post\")\r\n  //     this.token = res.token\r\n  //     let returnObj = {username: `${formData.username}`, token: res.token}\r\n  //     return returnObj\r\n  //   }\r\n\r\n  //   static async getUser(username){\r\n  //     console.log(this.token, username, \"this is tokena nd uusername in getuser\")\r\n  //     let res = await this.request(`users/${username}`)\r\n  //     return res.user;\r\n  //   }\r\n\r\n  //   static async editUser(formData){\r\n  //     let authRes = await this.loginUser({username: formData.username, password: formData.password})\r\n  //     delete formData.username;\r\n  //     let res = await this.request(`users/${authRes.username}`, formData, \"patch\")\r\n  //   }\r\n}\r\n\r\n// for now, put token (\"testuser\" / \"password\" on class)\r\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\r\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\r\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\r\n\r\nexport default RepnileApi;\r\n","import React, { useState } from \"react\";\r\nimport \"./AnimalSearchForm.css\"\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\nconst AnimalSearchForm = ({ search }) => {\r\n  const INITIAL_STATE = {};\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    search(formData);\r\n    setFormData(INITIAL_STATE);\r\n  };\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  /** render form */\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n      />\r\n\r\n      <input\r\n      id=\"species\"\r\n      name=\"species\"\r\n      value={formData.species}\r\n      onChange={handleChange}\r\n      placeholder=\"Species\"\r\n      />\r\n\r\n      <input\r\n      id=\"colorationPattern\"\r\n      name=\"colorationPattern\"\r\n      value={formData.colorationPattern}\r\n      onChange={handleChange}\r\n      placeholder=\"Coloration Pattern\"\r\n      />\r\n\r\n      <input\r\n      id=\"primaryColor\"\r\n      name=\"primaryColor\"\r\n      value={formData.primaryColor}\r\n      onChange={handleChange}\r\n      placeholder=\"Primary Color\"\r\n      />\r\n\r\n      <input\r\n      id=\"secondaryColor\"\r\n      name=\"secondaryColor\"\r\n      value={formData.secondaryColor}\r\n      onChange={handleChange}\r\n      placeholder=\"Secondary Color\"\r\n      />\r\n\r\n      <input\r\n      id=\"weight\"\r\n      name=\"weight\"\r\n      value={formData.weight}\r\n      onChange={handleChange}\r\n      placeholder=\"Weight\"\r\n      />\r\n\r\n      <input\r\n      id=\"age\"\r\n      name=\"age\"\r\n      value={formData.age}\r\n      onChange={handleChange}\r\n      placeholder=\"Age\"\r\n      />\r\n\r\n      <input\r\n      id=\"price\"\r\n      name=\"price\"\r\n      value={formData.price}\r\n      onChange={handleChange}\r\n      placeholder=\"Price\"\r\n      />\r\n\r\n      <br/>\r\n      <br/>\r\n      <button className=\"btn btn-success float-right\">Search</button>\r\n\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AnimalSearchForm;\r\n","import React, { useState} from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n  } from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport \"./AnimalCard.css\"\r\n\r\n\r\n\r\nfunction AnimalCard({ animal }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    let logoUrl\r\n\r\n    // if (animal.imgUrl != null){\r\n    //     logoUrl = `http://joelburton-jobly.surge.sh/${company.logoUrl}`\r\n    // }\r\n    \r\n    const forSale = animal.forSale\r\n    ? \"This critter is for sale!\"\r\n    : \"This critter is currently unavailable\";\r\n  \r\n    if (isLoading) {\r\n      return <p>Loading &hellip;</p>;\r\n    }\r\n  \r\n    return (\r\n        <Card className=\"col-md-12 AnimalCard\">\r\n          <CardBody>\r\n          <img\r\n          src={RepnileApi.getImage(animal.imgUrl)}\r\n          alt={animal.name}\r\n          width=\"180px\"\r\n          height=\"200px\"\r\n          className=\"position-absolute\"\r\n        />\r\n\r\n            <CardTitle className=\"font-weight-bold text-center\">\r\n              <b>{animal.name}</b>\r\n              <br/>\r\n            </CardTitle>\r\n            <CardText className=\"cardtext\">\r\n              {animal.colorationPattern} {animal.species}\r\n              <br/>\r\n              composed of\r\n              <br/>\r\n              {animal.primaryColor} and {animal.secondaryColor}\r\n              <br/>\r\n              <br/>\r\n              {forSale}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n    );\r\n  }\r\n  \r\n  export default AnimalCard;","import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport RepnileApi from \"../api\"\r\nimport AnimalSearchForm from \"./AnimalSearchForm\";\r\nimport AnimalCard from \"./AnimalCard\";\r\n\r\n\r\n\r\nfunction AnimalsPage({ }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    useEffect(() => {\r\n      async function getAnimals() {\r\n        let animals = await RepnileApi.getAllAnimals();\r\n        console.log(typeof(animals), \"animals in the useeffect\")\r\n        setAnimals(animals)\r\n        setIsLoading(false);\r\n      }\r\n      getAnimals()\r\n    }, []);\r\n\r\n    async function search(params) {\r\n        setIsLoading(true)\r\n        console.log(params, \"params in search isnide animalspage\")\r\n        let animals = await RepnileApi.getAnimalsQuery(params);\r\n        console.log(animals, \"animals in search\")\r\n        setAnimals(animals);\r\n        setIsLoading(false);\r\n      }\r\n  \r\n    if (isLoading) {\r\n      return <p>Loading &hellip;</p>;\r\n    }\r\n\r\n    console.log(animals, \"animals before the map\")\r\n    console.log(animals.map((animal) => console.log(animal)), \"this is animals on animals page\")\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-1\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>Animals</h2>\r\n          </CardTitle>\r\n          <CardText>\r\n            <AnimalSearchForm search={search} />\r\n          </CardText>\r\n  \r\n\r\n            {animals.map(animal => (\r\n              <Link to={`/animals/${animal.id}`}>\r\n                <AnimalCard animal={animal}/>\r\n              </Link>\r\n            ))}\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// The above can go inside of list group\r\n\r\nexport default AnimalsPage;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import Alert from \"../common/Alert\";\r\nimport RepnileApi from \"../api\";\r\nimport \"./AnimalAddForm.css\";\r\n\r\n/** Signup form.\r\n *\r\n * Shows form and manages update to state on changes.\r\n * On submission:\r\n * - calls signup function prop\r\n * - redirects to /companies route\r\n *\r\n * Routes -> SignupForm -> Alert\r\n * Routed as /signup\r\n */\r\n\r\nfunction AddAnimalForm() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    species: \"\",\r\n    birthDate: \"\",\r\n    weight: \"\",\r\n    sex: \"\",\r\n    colorationPattern: \"\",\r\n    primaryColor: \"\",\r\n    secondaryColor: \"\",\r\n    price: \"\",\r\n    forSale: true,\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  // const [forSale, setForSale] = useState(true)\r\n\r\n  console.debug(\r\n    \"AddAnimalForm\",\r\n    \"formData=\",\r\n    formData,\r\n    \"formErrors=\",\r\n    formErrors\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  const handleOnUploadFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const newFormData = new FormData();\r\n    Object.entries(formData).forEach(([k, v]) => {\r\n      newFormData.append(k, v);\r\n    });\r\n    newFormData.append(\"imgUrl\", file);\r\n    let result = await RepnileApi.addAnimal(newFormData);\r\n    console.log(result, \"this is result in handlesubmit of addanimalform\");\r\n    if (result) {\r\n      navigate(\"/animals\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    let { name, value } = evt.target;\r\n\r\n    if (evt.target.type == \"checkbox\") {\r\n      evt.target.checked = !evt.target.checked;\r\n\r\n      value = !evt.target.checked;\r\n    }\r\n    setFormData((data) => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddAnimalForm\">\r\n      <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n        <h2 className=\"mb-3\">Add Animal</h2>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Species</label>\r\n                <input\r\n                  name=\"species\"\r\n                  className=\"form-control\"\r\n                  value={formData.species}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Birth Date</label>\r\n                <input\r\n                  name=\"birthDate\"\r\n                  className=\"form-control\"\r\n                  value={formData.birthDate}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Sex</label>\r\n                <input\r\n                  name=\"sex\"\r\n                  className=\"form-control\"\r\n                  value={formData.sex}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Weight</label>\r\n                <input\r\n                  name=\"weight\"\r\n                  className=\"form-control\"\r\n                  value={formData.weight}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Coloration Pattern</label>\r\n                <input\r\n                  name=\"colorationPattern\"\r\n                  className=\"form-control\"\r\n                  value={formData.colorationPattern}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Primary Color</label>\r\n                <input\r\n                  name=\"primaryColor\"\r\n                  className=\"form-control\"\r\n                  value={formData.primaryColor}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Secondary Color</label>\r\n                <input\r\n                  name=\"secondaryColor\"\r\n                  className=\"form-control\"\r\n                  value={formData.secondaryColor}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                  name=\"price\"\r\n                  className=\"form-control\"\r\n                  value={formData.price}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  For Sale\r\n                  <input\r\n                    name=\"forSale\"\r\n                    type=\"checkbox\"\r\n                    checked={formData.forSale}\r\n                    onChange={handleChange}\r\n                  />\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Picture</label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"imgUrl\"\r\n                  accept=\"image/png, image/jpeg\"\r\n                  className=\"form-control\"\r\n                  onChange={handleOnUploadFile}\r\n                  multiple\r\n                />\r\n              </div>\r\n              <br />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success float-right\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// {formErrors.length\r\n//   ? <Alert type=\"danger\" messages={formErrors} />\r\n//   : null\r\n// }\r\n// THIS GOES ABOVE SUBMIT BUTTON\r\n\r\nexport default AddAnimalForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText\r\n} from \"reactstrap\";\r\nimport RepnileApi from \"../api\"\r\n\r\n\r\n\r\nfunction MessagesPage() {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [messageThreads, setMessageThreads] = useState([]);\r\n\r\n    useEffect(() => {\r\n      async function getMessageThreads() {\r\n        let messageThreads = await RepnileApi.getAllMessageThreads();\r\n        messageThreads = messageThreads.messages\r\n        setMessageThreads(messageThreads)\r\n        setIsLoading(false);\r\n      }\r\n      getMessageThreads()\r\n    }, []);\r\n\r\n    async function handleRemove(id) {\r\n      await RepnileApi.deleteMessageThread(id)\r\n      console.log(id);\r\n      // remove item\r\n    }\r\n  \r\n    console.log(messageThreads, \"this is messagethreads before it runs in react\")\r\n    if (isLoading) {\r\n      return <p>Loading &hellip;</p>;\r\n    }\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-4\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card style={{ width: '30rem' }}>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>Messages</h2>\r\n          </CardTitle>\r\n          <CardText>\r\n          </CardText>\r\n  \r\n          <Card>\r\n          {messageThreads.map(thread => (\r\n            <div>\r\n              <button onClick={() => handleRemove(thread.id)}>x</button>\r\n                <Link to={`/messages/${thread.id}`}>\r\n                  {thread.id}\r\n                </Link>\r\n            </div>\r\n          ))}\r\n          </Card>\r\n          The above can go inside of list group\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n//           <Card>\r\n// {messageThreads.map(thread => (\r\n//   <Link to={`/messages/${thread.id}`}>\r\n//     <MessageThread />\r\n//   </Link>\r\n// ))}\r\n// </Card>\r\n// The above can go inside of list group\r\n\r\nexport default MessagesPage;\r\n","import React, { useState } from \"react\";\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\nconst ItemSearchForm = ({ search }) => {\r\n  const INITIAL_STATE = {};\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    search(formData);\r\n    setFormData(INITIAL_STATE);\r\n  };\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  /** render form */\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n      />\r\n\r\n      <input\r\n      id=\"species\"\r\n      name=\"species\"\r\n      value={formData.species}\r\n      onChange={handleChange}\r\n      placeholder=\"Species\"\r\n      />\r\n\r\n      <input\r\n      id=\"colorationPattern\"\r\n      name=\"colorationPattern\"\r\n      value={formData.colorationPattern}\r\n      onChange={handleChange}\r\n      placeholder=\"Coloration Pattern\"\r\n      />\r\n\r\n      <input\r\n      id=\"primaryColor\"\r\n      name=\"primaryColor\"\r\n      value={formData.primaryColor}\r\n      onChange={handleChange}\r\n      placeholder=\"Primary Color\"\r\n      />\r\n\r\n      <input\r\n      id=\"secondaryColor\"\r\n      name=\"secondaryColor\"\r\n      value={formData.secondaryColor}\r\n      onChange={handleChange}\r\n      placeholder=\"Secondary Color\"\r\n      />\r\n      <button>Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ItemSearchForm;\r\n","import React, { useState} from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n  } from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport \"./ItemCard.css\"\r\n\r\n\r\n\r\nfunction ItemCard({ item }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // const [item, setItem] = useState([]);\r\n\r\n\r\n  \r\n    // useEffect(function getCompanyAndJobs() {\r\n    //   async function getCompany() {\r\n    //     setJobs(companyRes.jobs)\r\n    //     setCompany(company)\r\n    //     setIsLoading(false);\r\n    //   }\r\n    //   getCompany()\r\n    // }, [c]);\r\n\r\n    let logoUrl\r\n\r\n    if (item.imgUrl != null){\r\n        logoUrl = `http://`\r\n    }\r\n    \r\n  \r\n    if (isLoading) {\r\n      return <p>Loading &hellip;</p>;\r\n    }\r\n  \r\n    return (\r\n        <Card className=\"col-md-12 ItemCard\">\r\n          <CardBody className=\"col-md-12 \">\r\n          <img\r\n          src={RepnileApi.getImage(item.imgUrl)}\r\n          alt={item.name}\r\n          width=\"180px\"\r\n          height=\"200px\"\r\n          className=\"position-absolute top-5 end-5 float-right ml-5\"\r\n        />\r\n\r\n            <CardTitle className=\"font-weight-bold text-center\">\r\n              <b>{item.name}</b>\r\n              <br/>\r\n            </CardTitle>\r\n            <CardText>\r\n              {item.name}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n    );\r\n  }\r\n  \r\n  export default ItemCard;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport ItemSearchForm from \"./ItemSearchForm\";\r\nimport ItemCard from \"./ItemCard\";\r\nimport RepnileApi from \"../api\";\r\n\r\nfunction ItemsPage({}) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getItems() {\r\n      let items = await RepnileApi.getAllItems();\r\n      console.log(items, \"items in the useeffect\");\r\n      setItems(items);\r\n      setIsLoading(false);\r\n    }\r\n    getItems();\r\n  }, []);\r\n\r\n  async function search(params) {\r\n    setIsLoading(true);\r\n    console.log(params, \"params in search isnide animalspage\");\r\n    let items = await RepnileApi.getItemsQuery(params);\r\n    setItems(items);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n    // console.log(animals, \"animals before the map\")\r\n    // console.log(animals.map((animal) => console.log(animal)), \"this is animals on animals page\")\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-1\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>Items</h2>\r\n          </CardTitle>\r\n          <CardText>\r\n            <ItemSearchForm search={search} />\r\n          </CardText>\r\n\r\n          <Card>\r\n            {items.map(item => (\r\n              <Link to={`/items/${item.id}`}>\r\n                <ItemCard item={item}/>\r\n              </Link>\r\n            ))}\r\n          </Card>\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// The above can go inside of list group\r\n\r\nexport default ItemsPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport RepnileApi from \"../api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserContext from \"../UserContext\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Item() {\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [item, setItem] = useState({});\r\n  const user = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function getItem() {\r\n      let item = await RepnileApi.getItem(id);\r\n      // should i do parents here?\r\n      setItem(item.item);\r\n      setIsLoading(false);\r\n    }\r\n    getItem();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n  // return (\r\n  //   <section className=\"col-md-4\">\r\n  //     <Card>\r\n  //       <CardBody>\r\n  //         <CardTitle className=\"font-weight-bold text-center\">\r\n  //           {item.name}\r\n\r\n  return(\r\n      <div className=\"col-md-12 item\">\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle className=\"font-weight-bold text-center\">\r\n              {item.name}\r\n              <br />\r\n              {item.forSale}\r\n              <br />\r\n              Type: {item.type}\r\n              <br />\r\n              Description: {item.description}\r\n              <br />\r\n              Amount in Stock: {item.stock}\r\n              <br />\r\n              Price: {item.price}\r\n              <br />\r\n              <img\r\n                src={RepnileApi.getImage(item.imgUrl)}\r\n                alt={item.name}\r\n                width=\"50%\"\r\n                height=\"50%\"\r\n              />\r\n              <br />\r\n              <Link to={`/items/${item.id}/edit`}>Edit</Link>\r\n            </CardTitle>\r\n            <CardText></CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Item;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Animal.css\"\r\nimport AnimalCard from \"./AnimalCard\";\r\n\r\nfunction Animal() {\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [animal, setAnimal] = useState([]);\r\n  const [parents, setParents] = useState([]);\r\n  // const user = useContext(UserContext);\r\n\r\n  useEffect(\r\n    function getAnimalOnLoad() {\r\n      async function getAnimal() {\r\n        let parents = [];\r\n        let animal = await RepnileApi.getAnimal(id);\r\n        // WHAT IF GETANIMALPARENTAGE DOESNT RETURN OR THROWS AN ERROR? TRY CATCH?\r\n        let parentIds = await RepnileApi.getAnimalParentage(id);\r\n        parentIds = parentIds.parentsIds\r\n        for (let i = 0; i < parentIds.length; i++){\r\n          console.log(parentIds[i], \"should be abinak id\")\r\n          let parent = await RepnileApi.getAnimal(parentIds[i].parentId);\r\n          console.log(parent, \"parent inside the loop\")\r\n          parents.push(parent)\r\n        }\r\n        console.log(animal, parents, \"this is animal and parents in  getanimalonload\");\r\n        setParents(parents);\r\n        setAnimal(animal);\r\n        setIsLoading(false);\r\n\r\n        // should i do parents here?\r\n\r\n      }\r\n      getAnimal();\r\n    },\r\n    [id]\r\n  );\r\n\r\n  const forSale = animal.forSale\r\n    ? \"This critter is for sale!\"\r\n    : \"This critter is currently unavailable\";\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12 animal\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            {animal.name}\r\n            <br />\r\n            {forSale}\r\n            <br />\r\n            Weight: {animal.weight} grams\r\n            <br />\r\n            Coloration Pattern: {animal.colorationPattern}\r\n            <br />\r\n            Primary Color: {animal.primaryColor}\r\n            <br />\r\n            Secondary Color: {animal.secondaryColor}\r\n            <br />\r\n            Birth Date: {animal.birth_date}\r\n            <br />\r\n            Price: ${animal.price}\r\n            <br />\r\n            Sex: {animal.sex}\r\n            <br />\r\n            Species: {animal.species}\r\n            <br />\r\n            <img\r\n              src={RepnileApi.getImage(animal.imgUrl)}\r\n              alt={animal.name}\r\n              width=\"50%\"\r\n              height=\"50%\"\r\n            />\r\n            <br />\r\n            <Link to={`/animals/${animal.id}/edit`}>Edit</Link>\r\n          </CardTitle>\r\n          <CardText></CardText>\r\n        </CardBody>\r\n      </Card>\r\n      <br/>\r\n      <h1 className=\"parents\">PARENTS:</h1>\r\n      <Card>\r\n      {parents.map(parent => (\r\n        <Link to={`/animals/${parent.id}`}>\r\n          <AnimalCard animal={parent}/>\r\n          <br/>\r\n        </Link>\r\n      ))}\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Animal;\r\n","import React, { useState } from \"react\";\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\nconst LoginForm = ({ login }) => {\r\n  const INITIAL_STATE = {username: \"\", password: \"\"};\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    login(formData);\r\n    setFormData(INITIAL_STATE);\r\n  };\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  /** render form */\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <input\r\n        id=\"username\"\r\n        name=\"username\"\r\n        value={formData.username}\r\n        onChange={handleChange}\r\n        placeholder=\"Username\"\r\n      />\r\n      <br/>\r\n\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <input\r\n        id=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        placeholder=\"Minimum 5 characters\"\r\n      />\r\n      <br/>\r\n\r\n\r\n      <button>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    let value\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || JSON.stringify(defaultValue)\r\n      )\r\n    } catch (e) {\r\n      console.log(e)\r\n      value = defaultValue;\r\n    }\r\n    return value;\r\n  })\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state))\r\n  }, [key, state])\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n  } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction Message({ message }) {\r\n\r\n  \r\n    return (\r\n      <section className=\"col-md-12\">\r\n        <Card>\r\n          <CardBody className=\"col-md-12 \">\r\n            <CardTitle className=\"font-weight-bold\">\r\n              <b>From: {message.sender}</b>\r\n              <br/>\r\n              <b>To: {message.recipient}</b>\r\n              <br/>\r\n            </CardTitle>\r\n            <CardText>\r\n              {message.createdAt}\r\n              <br/>\r\n              {message.messageText}\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  \r\n  export default Message;","import React, { useState } from \"react\";\r\nimport RepnileApi from \"../api\";\r\n\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\nconst OwnerMessageSender = ({ messageThread }) => {\r\n  const INITIAL_STATE = {messageText: \"\"};\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n//   const [msgId, setMsgId] = useLocalStorage(\"msgId\", undefined);\r\n  \r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    // if (msgId === undefined){\r\n    //   // Then a message hasn't been sent yet, so create an ID\r\n    //   let newMsgId = uuid();\r\n    //   setMsgId(newMsgId);\r\n    // }\r\n\r\n    formData.recipient = messageThread.uuid\r\n    formData.sender = \"dina\"\r\n    console.log(formData, \"this is formdata before a message sends from owner sender\")\r\n    let result = await RepnileApi.postMessage(formData);\r\n    // login(formData);\r\n    // Needs to send message to db, and update message sent... can just post message tomessages/id?\r\n    setFormData(INITIAL_STATE);\r\n  };\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  /** render form */\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"messageText\">Message:</label>\r\n      <input\r\n        id=\"messageText\"\r\n        name=\"messageText\"\r\n        value={formData.messageText}\r\n        onChange={handleChange}\r\n        placeholder=\"Message Text\"\r\n      />\r\n      <br/>\r\n      <button>Send Message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OwnerMessageSender;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport Message from \"./Message\";\r\nimport OwnerMessageSender from \"./OwnerMessageSender\";\r\n\r\nfunction UserMessageThread({ id }) {\r\n  // const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [messageThread, setMessageThread] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(\r\n    function getMessageThreadOnLoad() {\r\n      async function getMessageThread() {\r\n        console.log(id, \"id param\");\r\n        if (!id) {\r\n          return;\r\n        }\r\n        let messageThread = await RepnileApi.getMessageThread(id);\r\n        // should i do parents here?\r\n        console.log(messageThread, \"this is msgthread before its loaded up\");\r\n\r\n        console.log(\r\n          messageThread,\r\n          messageThread?.messageThread?.messages,\r\n          messageThread?.messageThread\r\n        );\r\n        setMessageThread(messageThread?.messageThread);\r\n        setMessages(messageThread?.messageThread?.messages || []);\r\n        setIsLoading(false);\r\n      }\r\n      getMessageThread();\r\n    },\r\n    [id]\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"col-md-4\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className=\"font-weight-bold text-center\"></CardTitle>\r\n          <CardText>\r\n            Message Thread Id: {messageThread.uuid} <br />\r\n            Created at:{messageThread.createdAt} <br />\r\n            Updated at: {messageThread.updatedAt} <br />\r\n            Last Checked at:{messageThread.lastCheckedAt}\r\n            {messages.map((message) => (\r\n              <Message message={message} />\r\n            ))}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserMessageThread;\r\n","import React, { useState } from \"react\";\r\nimport RepnileApi from \"../api\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport UserMessageThread from \"./UserMessageThread\";\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\nconst MessageSender = () => {\r\n  const INITIAL_STATE = { messageText: \"\" };\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n  const [msgId, setMsgId] = useLocalStorage(\"msgId\", undefined);\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let newMsgId = msgId;\r\n    if (newMsgId === undefined) {\r\n      // Then a message hasn't been sent yet, so create an ID\r\n      newMsgId = uuid();\r\n      setMsgId(newMsgId);\r\n    }\r\n\r\n    // Need to fix that this aint refresing enough to send it through\r\n\r\n    // Need to set user in local storage and then just get them out, create this when\r\n    const data = {\r\n      messageText: formData.messageText,\r\n      sender: newMsgId,\r\n      recipient: \"dina\",\r\n    };\r\n    console.log(\r\n      formData,\r\n      data,\r\n      \"this is formdata before a message sends from user sender\"\r\n    );\r\n    let result = await RepnileApi.postMessage(data);\r\n    // login(formData);\r\n    // Needs to send message to db, and update message sent... can just post message tomessages/id?\r\n    setFormData(INITIAL_STATE);\r\n  }\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setFormData((fData) => ({\r\n      ...fData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  /** render form */\r\n\r\n  return (\r\n    <div>\r\n      <UserMessageThread id={msgId} />\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"messageText\">Message:</label>\r\n        <input\r\n          id=\"messageText\"\r\n          name=\"messageText\"\r\n          value={formData.messageText}\r\n          onChange={handleChange}\r\n          placeholder=\"Message Text\"\r\n        />\r\n        <br />\r\n        <button>Send Message</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageSender;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport Message from \"./Message\";\r\nimport OwnerMessageSender from \"./OwnerMessageSender\";\r\n\r\nfunction MessageThread() {\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [messageThread, setMessageThread] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(\r\n    function getMessageThreadOnLoad() {\r\n      async function getMessageThread() {\r\n        console.log(id, \"id param\");\r\n        let messageThread = await RepnileApi.getMessageThread(id);\r\n        // should i do parents here?\r\n        console.log(messageThread, \"this is msgthread before its loaded up\");\r\n\r\n        setMessageThread(messageThread.messageThread);\r\n        setMessages(messageThread.messageThread.messages);\r\n        setIsLoading(false);\r\n      }\r\n      getMessageThread();\r\n    },\r\n    [id]\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"col-md-4\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className=\"font-weight-bold text-center\"></CardTitle>\r\n          <CardText>\r\n            Message Thread Id: {messageThread.uuid} <br />\r\n            Created at:{messageThread.createdAt} <br />\r\n            Updated at: {messageThread.updatedAt} <br />\r\n            Last Checked at:{messageThread.lastCheckedAt}\r\n            {messages.map((message) => (\r\n              <Message message={message} />\r\n            ))}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n      <OwnerMessageSender messageThread={messageThread} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MessageThread;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// import Alert from \"../common/Alert\";\r\nimport RepnileApi from \"../api\";\r\n\r\n/** Signup form.\r\n *\r\n * Shows form and manages update to state on changes.\r\n * On submission:\r\n * - calls signup function prop\r\n * - redirects to /companies route\r\n *\r\n * Routes -> SignupForm -> Alert\r\n * Routed as /signup\r\n */\r\n\r\nfunction AnimalEditForm() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    species: \"\",\r\n    birthDate: \"\",\r\n    weight: \"\",\r\n    sex: \"\",\r\n    colorationPattern: \"\",\r\n    primaryColor: \"\",\r\n    secondaryColor: \"\",\r\n    price: \"\",\r\n    forSale: true\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  // const [forSale, setForSale] = useState(true)\r\n\r\n  console.debug(\r\n      \"AnimalEditForm\",\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getAnimal() {\r\n      let animal = await RepnileApi.getAnimal(id);\r\n      console.log(animal, \"this is animal in getAnimal on load at edit animal form\")\r\n      const INITIAL_STATE = {\r\n      name: animal.name,\r\n      species: animal.species,\r\n      birthDate: animal.birth_date,\r\n      weight: animal.weight,\r\n      sex: animal.sex,\r\n      colorationPattern: animal.colorationPattern,\r\n      primaryColor: animal.primaryColor,\r\n      secondaryColor: animal.secondaryColor,\r\n      price: animal.price,\r\n      forSale: animal.forSale};\r\n      setFormData(INITIAL_STATE)\r\n      // setIsLoading(false);\r\n    }\r\n    getAnimal()\r\n  }, []);\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await RepnileApi.updateAnimal(formData, id);\r\n    console.log(result, \"this is result in handlesubmit of AnimalEditForm\")\r\n    if (result) {\r\n      navigate(\"/animals\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    let { name, value } = evt.target;\r\n    console.log(evt.target, \"this is evt target\")\r\n    if (evt.target.type == \"checkbox\"){\r\n      evt.target.checked = !evt.target.checked\r\n\r\n      value =  !evt.target.checked\r\n      console.log(evt.target.checked, \"this is evt.tgt.check\")\r\n      console.log(value, \"this is value in hitting the check\")\r\n    }\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n      <div className=\"AnimalEditForm\">\r\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n          <h2 className=\"mb-3\">Edit Animal</h2>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      value={formData.name}\r\n                      onChange={handleChange}\r\n                      placeholder={formData.name}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Species</label>\r\n                <input\r\n                    name=\"species\"\r\n                    className=\"form-control\"\r\n                    value={formData.species}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Birth Date</label>\r\n                  <input\r\n                      name=\"birthDate\"\r\n                      className=\"form-control\"\r\n                      value={formData.birthDate}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Sex</label>\r\n                  <input\r\n                      name=\"sex\"\r\n                      className=\"form-control\"\r\n                      value={formData.sex}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Weight</label>\r\n                  <input\r\n                      name=\"weight\"\r\n                      className=\"form-control\"\r\n                      value={formData.weight}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Coloration Pattern</label>\r\n                <input\r\n                    name=\"colorationPattern\"\r\n                    className=\"form-control\"\r\n                    value={formData.colorationPattern}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Primary Color</label>\r\n                <input\r\n                    name=\"primaryColor\"\r\n                    className=\"form-control\"\r\n                    value={formData.primaryColor}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Secondary Color</label>\r\n                <input\r\n                    name=\"secondaryColor\"\r\n                    className=\"form-control\"\r\n                    value={formData.secondaryColor}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    name=\"price\"\r\n                    className=\"form-control\"\r\n                    value={formData.price}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>For Sale\r\n                <input\r\n                    name=\"forSale\"\r\n                    type=\"checkbox\"\r\n                    checked={formData.forSale}\r\n                    onChange={handleChange}\r\n                /></label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Picture</label>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"imgUrl\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    className=\"form-control\"\r\n                    value={formData.imgUrl}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary float-right\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n// {formErrors.length\r\n//   ? <Alert type=\"danger\" messages={formErrors} />\r\n//   : null\r\n// }\r\n// THIS GOES ABOVE SUBMIT BUTTON\r\n\r\nexport default AnimalEditForm;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction TermsOfService({ }) {\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-2\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card style={{ width: '60rem' }}>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>Terms of Service</h2>\r\n          </CardTitle>\r\n  \r\n          <Card>\r\n          <h4>\r\n          Return and Refund\r\n          </h4>\r\n\r\n\r\n          Animals are final purchase unless we have discussed a trade plan. Dropped tails anytime after purchase including during transit does not change anything about the quality of the animal and in no way warrants a refund. All animals are guaranteed live on arrival. Should your animal not make the journey, I require photo and video evidence of pick up time and condition of the gecko within 1 hour of pick up or the guarantee is void. If you have completed the appropriate steps and your animal did not make the trip, you are eligible for store credit up to the full value of your gecko before any applied discounts. Should you choose an animal as a replacement you will be responsible for the shipping cost.\r\n          \r\n          \r\n          \r\n          <h4>\r\n          Shipping\r\n          </h4>\r\n          \r\n          \r\n          Shipping is at the expense of the purchaser and a flat $55 unless there is a promotion. <br/>\r\n          \r\n          Once payment has been received you can schedule to have your Crested Gecko(s) shipped by contacting me at dina.raibrahim@gmail.com. I ship via FedEx Priority Overnight. Shipping days are Monday-Wednesday and I will only ship your Crested Gecko when day and nighttime temperatures are between 50 and 80 degrees at both locations. If weather conditions do not permit shipping I will hold onto your Crested Gecko at no additional charge until conditions improve. In most cases your shipment will arrive by 10:30am but if you live in a remote area, delivery could be later in the day. <br/><br/>\r\n          \r\n          Always make sure to double check the shipping information you provide when ordering from me. In addition to your address I require your email and daytime phone number. This information is required for FedEx Live Animal Shipments. If a wrong shipping address is provided the live arrival guarantee is void. <br/><br/>\r\n          \r\n          I can ship to a FedEx staffed office or hub if that is your preference. It is your responsibility to make sure they will accept live animal shipments beforehand. FedEx Office & Print and FedEx Kinkos locations WILL NOT accept live animal shipments. Geckos delivered to a FedEx office need to be picked up within (1) hour of delivery. If the package gets rejected by your FedEx office or you fail to pick up your gecko(s) within (1) hour of delivery my live arrival guarantee is void and you will not be eligible for store credit. <br/><br/>\r\n          \r\n          It is imperative that someone will be there to receive the shipment at the time of the first delivery attempt. I cannot guarantee live animal delivery when the gecko has been trucked around on the back of a hot or cold UPS truck all day! I also do not offer net terms. All orders must be paid in full before I will ship. <br/><br/>\r\n          \r\n          These terms of service are updated as of 2/1/2021 by RepNile Exotics\r\n          </Card>\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// The above can go inside of list group\r\n\r\nexport default TermsOfService;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n  } from \"reactstrap\";\r\n\r\n\r\n\r\nfunction EventCard({ event }) {\r\n\r\n    let logoUrl\r\n\r\n    // <img src={logoUrl} className=\"position-absolute top-5 end-5 float-right ml-5\"/>\r\n  \r\n    return (\r\n      <section className=\"col-md-12 UpcomingEventsCard\">\r\n        <Card>\r\n          <CardBody className=\"col-md-12 \">\r\n\r\n            <CardTitle className=\"font-weight-bold text-center\">\r\n              <b>{event.title}</b>\r\n              <br/>\r\n              <p>{event.date}</p>\r\n            </CardTitle>\r\n            <CardText>\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </section>\r\n    );\r\n  }\r\n  \r\n  export default EventCard;","import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport RepnileApi from \"../api\"\r\nimport EventCard from \"./EventCard\";\r\n\r\n\r\nfunction EventsPage({ }) {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n      async function getEvents() {\r\n        let events = await RepnileApi.getEvents();\r\n        setEvents(events)\r\n        setIsLoading(false);\r\n      }\r\n      getEvents()\r\n    }, []);\r\n\r\n    console.log(events)\r\n  \r\n    if (isLoading) {\r\n      return <p>Loading &hellip;</p>;\r\n    }\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-4\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card style={{ width: '30rem' }}>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>Events</h2>\r\n          </CardTitle>  \r\n          <Card>\r\n            {events.map(event => (\r\n              <Link to={`/events/${event.id}`}>\r\n                <EventCard event={event}/>\r\n              </Link>\r\n            ))}\r\n          </Card>\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport RepnileApi from \"../api\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Event() {\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [event, setEvent] = useState([]);\r\n\r\n  useEffect(\r\n    function getEventOnLoad() {\r\n      async function getEvent() {\r\n        let event = await RepnileApi.getEvent(id);\r\n        console.log(event, \"this is animal in  getanimalonload\");\r\n        setEvent(event.event);\r\n        setIsLoading(false);\r\n      }\r\n      getEvent();\r\n    },\r\n    [id]\r\n  );\r\n\r\n//   const forSale = animal.forSale\r\n//     ? \"This critter is for sale!\"\r\n//     : \"This critter is currently unavailable\";\r\n\r\n  if (isLoading) {\r\n    return <p>Loading... &hellip;</p>;\r\n  }\r\nconsole.log(event)\r\n\r\n  return (\r\n    <section className=\"col-md-4\">\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            {event.title}\r\n            <br/>\r\n            <br/>\r\n            {event.date}\r\n            <br/>\r\n            <br/>\r\n            {event.description}\r\n            <br />\r\n            <br />\r\n          </CardTitle>\r\n          <CardText></CardText>\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import Alert from \"../common/Alert\";\r\nimport RepnileApi from \"../api\";\r\n// import \"./EventAddForm.css\"\r\n\r\n/** Signup form.\r\n *\r\n * Shows form and manages update to state on changes.\r\n * On submission:\r\n * - calls signup function prop\r\n * - redirects to /companies route\r\n *\r\n * Routes -> SignupForm -> Alert\r\n * Routed as /signup\r\n */\r\n\r\nfunction EventAddForm() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    date: \"\",\r\n    description: \"\"\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  // const [forSale, setForSale] = useState(true)\r\n\r\n  console.debug(\r\n    \"AddAnimalForm\",\r\n    \"formData=\",\r\n    formData,\r\n    \"formErrors=\",\r\n    formErrors\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    // const newFormData = new FormData();\r\n    // Object.entries(formData).forEach(([k, v]) => {\r\n    //   newFormData.append(k, v);\r\n    // });\r\n    // newFormData.append(\"imgUrl\", file);\r\n    let result = await RepnileApi.addEvent(formData);\r\n    console.log(result, \"this is result in handlesubmit of addevent\");\r\n    if (result) {\r\n      navigate(\"/events\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    let { name, value } = evt.target;\r\n    // console.log(evt.target, \"this is evt target\");\r\n    // if (evt.target.type == \"checkbox\") {\r\n    //   evt.target.checked = !evt.target.checked;\r\n\r\n    //   value = !evt.target.checked;\r\n    //   console.log(evt.target.checked, \"this is evt.tgt.check\");\r\n    //   console.log(value, \"this is value in hitting the check\");\r\n    // }\r\n    setFormData((data) => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddAnimalForm\">\r\n      <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n        <h2 className=\"mb-3\">Add Event</h2>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  className=\"form-control\"\r\n                  value={formData.title}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Date</label>\r\n                <input\r\n                  name=\"date\"\r\n                  className=\"form-control\"\r\n                  value={formData.date}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n<br/>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success float-right\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// {formErrors.length\r\n//   ? <Alert type=\"danger\" messages={formErrors} />\r\n//   : null\r\n// }\r\n// THIS GOES ABOVE SUBMIT BUTTON\r\n\r\nexport default EventAddForm;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import Alert from \"../common/Alert\";\r\nimport RepnileApi from \"../api\";\r\n\r\n/** Signup form.\r\n *\r\n * Shows form and manages update to state on changes.\r\n * On submission:\r\n * - calls signup function prop\r\n * - redirects to /companies route\r\n *\r\n * Routes -> SignupForm -> Alert\r\n * Routed as /signup\r\n */\r\n\r\nfunction ItemAddForm() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    type: \"\",\r\n    description: \"\",\r\n    stock: \"\",\r\n    price: \"\",\r\n    forSale: true\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  // const [forSale, setForSale] = useState(true)\r\n\r\n  console.debug(\r\n      \"ItemAddForm\",\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n   const handleOnUploadFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const newFormData = new FormData();\r\n    Object.entries(formData).forEach(([k, v]) => {\r\n      newFormData.append(k, v);\r\n    });\r\n    newFormData.append(\"imgUrl\", file);\r\n    let result = await RepnileApi.addItem(newFormData);\r\n    console.log(result, \"this is result in handlesubmit of addanimalform\");\r\n    if (result) {\r\n      navigate(\"/items\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    let { name, value } = evt.target;\r\n    if (evt.target.type == \"checkbox\"){\r\n      evt.target.checked = !evt.target.checked\r\n\r\n      value =  !evt.target.checked\r\n    }\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n      <div className=\"ItemAddForm\">\r\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n          <h2 className=\"mb-3\">Add Item</h2>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      value={formData.name}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Type</label>\r\n                <input\r\n                    name=\"type\"\r\n                    className=\"form-control\"\r\n                    value={formData.type}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <input\r\n                      name=\"description\"\r\n                      className=\"form-control\"\r\n                      value={formData.description}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Stock</label>\r\n                  <input\r\n                      name=\"stock\"\r\n                      className=\"form-control\"\r\n                      value={formData.stock}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Price</label>\r\n                  <input\r\n                      name=\"price\"\r\n                      className=\"form-control\"\r\n                      value={formData.price}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>For Sale\r\n                <input\r\n                    name=\"forSale\"\r\n                    type=\"checkbox\"\r\n                    checked={formData.forSale}\r\n                    onChange={handleChange}\r\n                /></label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Picture</label>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"imgUrl\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    className=\"form-control\"\r\n                    value={formData.imgUrl}\r\n                    onChange={handleOnUploadFile}\r\n                />\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary float-right\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n// {formErrors.length\r\n//   ? <Alert type=\"danger\" messages={formErrors} />\r\n//   : null\r\n// }\r\n// THIS GOES ABOVE SUBMIT BUTTON\r\n\r\nexport default ItemAddForm;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction About({ }) {\r\n\r\n  return (\r\n    <div className=\"col-md-12 offset-md-2\">\r\n    <br/>\r\n    <section className=\"col-md-10\">\r\n      <Card style={{ width: '60rem' }}>\r\n        <CardBody className=\"col-md-12 \">\r\n          <CardTitle className=\"font-weight-bold text-center\">\r\n            <h2>About</h2>\r\n          </CardTitle>\r\n  \r\n          <Card>\r\n          <h4>\r\n          Origin Story\r\n          </h4>\r\n\r\n\r\n          Animals are my passion. They have been ever since I was a kid. I followed that passion all the way to Veterinary School and then started my herp journey with my first Corn Snake, Scarlett. After Scar, I got my first crested gecko, Fawkes. I found that I wanted more and more babies and ultimately realized that if I wanted to have babies, I'd have to sell them too.\r\n\r\n          <br/>\r\n          <br/>\r\n          So here I am, 2 years deep into this excellent hobby and looking forward to many many more. \r\n          \r\n          <br/>\r\n          <br/>\r\n          <h6>\r\n          Core Values\r\n          </h6>\r\n          \r\n          </Card>\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// The above can go inside of list group\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// import Alert from \"../common/Alert\";\r\nimport RepnileApi from \"../api\";\r\n\r\n/** Signup form.\r\n *\r\n * Shows form and manages update to state on changes.\r\n * On submission:\r\n * - calls signup function prop\r\n * - redirects to /companies route\r\n *\r\n * Routes -> SignupForm -> Alert\r\n * Routed as /signup\r\n */\r\n\r\nfunction ItemEditForm() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    type: \"\",\r\n    description: \"\",\r\n    stock: \"\",\r\n    price: \"\",\r\n    forSale: true\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  // const [forSale, setForSale] = useState(true)\r\n\r\n  console.debug(\r\n      \"ItemEditForm\",\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getItem() {\r\n      let item = await RepnileApi.getItem(id);\r\n      console.log(item, \"this is Item in getItem on load at edit Item form\")\r\n      const INITIAL_STATE = {\r\n      name: item.name,\r\n      type: item.type,\r\n      description: item.description,\r\n      stock: item.stock,\r\n      price: item.price,\r\n      forSale: item.forSale};\r\n      setFormData(INITIAL_STATE)\r\n      // setIsLoading(false);\r\n    }\r\n    getItem()\r\n  }, []);\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await RepnileApi.updateItem(formData, id);\r\n    console.log(result, \"this is result in handlesubmit of AnimalEditForm\")\r\n    if (result) {\r\n      navigate(\"/items\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    let { name, value } = evt.target;\r\n    console.log(evt.target, \"this is evt target\")\r\n    if (evt.target.type == \"checkbox\"){\r\n      evt.target.checked = !evt.target.checked\r\n\r\n      value =  !evt.target.checked\r\n      console.log(evt.target.checked, \"this is evt.tgt.check\")\r\n      console.log(value, \"this is value in hitting the check\")\r\n    }\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n      <div className=\"ItemEditForm\">\r\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n          <h2 className=\"mb-3\">Edit Item</h2>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      value={formData.name}\r\n                      onChange={handleChange}\r\n                      placeholder={formData.name}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Type</label>\r\n                <input\r\n                    name=\"species\"\r\n                    className=\"form-control\"\r\n                    value={formData.species}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Description</label>\r\n                  <input\r\n                      name=\"birthDate\"\r\n                      className=\"form-control\"\r\n                      value={formData.birthDate}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Amount in Stock</label>\r\n                  <input\r\n                      name=\"stock\"\r\n                      className=\"form-control\"\r\n                      value={formData.stock}\r\n                      onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>For Sale\r\n                <input\r\n                    name=\"forSale\"\r\n                    type=\"checkbox\"\r\n                    checked={formData.forSale}\r\n                    onChange={handleChange}\r\n                /></label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Picture</label>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"imgUrl\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    className=\"form-control\"\r\n                    value={formData.imgUrl}\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary float-right\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n// {formErrors.length\r\n//   ? <Alert type=\"danger\" messages={formErrors} />\r\n//   : null\r\n// }\r\n// THIS GOES ABOVE SUBMIT BUTTON\r\n\r\nexport default ItemEditForm;","import React, {useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RepnileApi from \"../api\"\r\n\r\n\r\n\r\nfunction AnimalAddParentage({ }) {\r\n\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [animals, setAnimals] = useState([]);\r\n    const [parent, setParent] = useState(\"\");\r\n    const [child, setChild] = useState(\"\");\r\n    const [formErrors, setFormErrors] = useState([]);\r\n      // const [forSale, setForSale] = useState(true)\r\n    \r\n      console.debug(\r\n        \"AddParentageForm\",\r\n        \"formErrors=\",\r\n        formErrors\r\n      );\r\n\r\n    useEffect(() => {\r\n      async function getAnimals() {\r\n        let animals = await RepnileApi.getAllAnimals();\r\n        console.log(animals, \"animals in the useeffect\")\r\n        setAnimals(animals)\r\n        setParent(animals[0].id)\r\n        setChild(animals[0].id)\r\n        setIsLoading(false);\r\n      }\r\n      getAnimals()\r\n    }, []);\r\n    \r\n    async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    console.log(parent, child, \"parent and child on submit\")\r\n    let result = await RepnileApi.addAnimalParentage(String(parent), String(child));\r\n    console.log(result, \"this is result in handlesubmit of addevent\");\r\n    if (result) {\r\n        navigate(\"/animals\");\r\n    } else {\r\n        setFormErrors(result.errors);\r\n    }\r\n    }\r\n    \r\n      /** Update form data field */\r\n    function handleParentChange(evt) {\r\n      setParent(evt.target.value);\r\n    console.log(parent, \"this is changeparent\")\r\n    }\r\n\r\n    function handleChildChange(evt) {\r\n      setChild(evt.target.value);\r\n    console.log(child, \"this is changeparent\")\r\n    }\r\n    \r\n    \r\n\r\n    if (isLoading) {\r\n        return <p>Loading &hellip;</p>;\r\n      }\r\n\r\n    return (\r\n    <div className=\"AddParentageForm\">\r\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n        <h2 className=\"mb-3\">Add Parentage:</h2>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"parent\" id=\"parent\" onChange={handleParentChange}>\r\n                        {animals.map((animal) => <option key={animal.name} value={animal.id}>{animal.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Is the parent of</label>\r\n                <div className=\"form-group\">\r\n                    <select name=\"child\" id=\"child\" onChange={handleChildChange}>\r\n                        {animals.map((animal) => <option key={animal.name} value={animal.id}>{animal.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                </div>\r\n                <br/>\r\n                <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success float-right\"\r\n                onSubmit={handleSubmit}\r\n                >\r\n                Submit\r\n                </button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n    \r\n    // {formErrors.length\r\n    //   ? <Alert type=\"danger\" messages={formErrors} />\r\n    //   : null\r\n    // }\r\n    // THIS GOES ABOVE SUBMIT BUTTON\r\n    \r\n    export default AnimalAddParentage;\r\n    ","import React, {useContext} from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport HomePage from \"../AssortedSinglePages/HomePage\";\r\n// import RepnileApi from \"./api\"\r\nimport NavBar from \"./NavBar\";\r\nimport AnimalsPage from \"../AnimalComponents/AnimalsPage\";\r\nimport AnimalAddForm from \"../AnimalComponents/AnimalAddForm\";\r\nimport MessagesPage from \"../MessagesComponents/MessagesPage\";\r\nimport ItemsPage from \"../ItemComponents/ItemsPage\";\r\nimport Item from \"../ItemComponents/Item\";\r\nimport Animal from \"../AnimalComponents/Animal\";\r\nimport LoginForm from \"../AdminRoutes/LoginForm\";\r\nimport UserMessageSender from \"../MessagesComponents/UserMessageSender\"\r\nimport MessageThread from \"../MessagesComponents/MessageThread\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport UserContext from \"../UserContext\";\r\nimport AnimalEditForm from \"../AnimalComponents/AnimalEditForm\";\r\nimport TermsOfService from \"../AssortedSinglePages/TermsOfService\";\r\nimport UpcomingEventsPage from \"../EventsComponents/EventsPage\";\r\nimport UpcomingEvent from \"../EventsComponents/Event\";\r\nimport EventAddForm from \"../EventsComponents/EventAdd\";\r\nimport ItemAddForm from \"../ItemComponents/ItemAddForm\"\r\nimport About from \"../AssortedSinglePages/About\";\r\nimport ItemEditForm from \"../ItemComponents/ItemEditForm\";\r\nimport AnimalAddParentage from \"../AnimalComponents/AnimalAddParentage\";\r\n\r\n\r\nfunction AppRoutes({login, logout}) {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    console.log(user, \"this is user in approutes\")\r\n\r\n\r\n    if (user.username == \"test\"){\r\n        return (\r\n            <BrowserRouter>\r\n            <NavBar logout={logout} />\r\n            <main>\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<HomePage />}/>\r\n                <Route exact path=\"/messages\" element={<MessagesPage />}/>\r\n                <Route exact path=\"/messages/:id\" cantFind=\"/messages\" element={<MessageThread />}/>\r\n                <Route exact path=\"/animals\" element={<AnimalsPage />}/>\r\n                <Route exact path=\"/animals/:id\" cantFind=\"/animals\" element={<Animal />}/>\r\n                <Route exact path=\"/animals/:id/edit\" cantFind=\"/animals\" element={<AnimalEditForm />}/>\r\n                <Route exact path=\"/animals/add\" element={<AnimalAddForm />}/>\r\n                <Route exact path=\"/animals/parentage\" element={<AnimalAddParentage />}/>\r\n                <Route exact path=\"/items\" element={<ItemsPage />}/>\r\n                <Route exact path=\"/items/:id\" cantFind=\"/item\" element={<Item />}/>\r\n                <Route exact path=\"/items/add\" element={<ItemAddForm />}/>\r\n                <Route exact path=\"/items/:id/edit\" cantFind=\"/items\" element={<ItemEditForm />}/>\r\n                <Route exact path=\"/events\" element={<UpcomingEventsPage />}/>\r\n                <Route exact path=\"/events/:id\" cantFind=\"/events\" element={<UpcomingEvent />}/>\r\n                <Route exact path=\"/events/add\" element={<EventAddForm />}/>\r\n                <Route exact path=\"/terms_of_service\" element={<TermsOfService/>}/>\r\n                <Route exact path=\"/about\" element={<About/>}/>\r\n\r\n                <Route element={<p>Hmmm. I can't seem to find what you want.</p>}/>\r\n            </Routes>\r\n            </main>\r\n            </BrowserRouter>\r\n        )};\r\n\r\n        return (\r\n            <BrowserRouter>\r\n            <NavBar />\r\n            <main>\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<HomePage />}/>\r\n                <Route exact path=\"/login\" element={<LoginForm login={login}/>}/>\r\n                <Route exact path=\"/animals\" element={<AnimalsPage />}/>\r\n                <Route exact path=\"/animals/:id\" cantFind=\"/animals\" element={<Animal />}/>\r\n                <Route exact path=\"/messages/send\" element={<UserMessageSender />}/>\r\n                <Route exact path=\"/items\" element={<ItemsPage />}/>\r\n                <Route exact path=\"/items/:id\" cantFind=\"/item\" element={<Item />}/>\r\n                <Route exact path=\"/events\" element={<UpcomingEventsPage />}/>\r\n                <Route exact path=\"/events/:id\" cantFind=\"/events\" element={<UpcomingEvent />}/>\r\n                <Route exact path=\"/terms_of_service\" element={<TermsOfService/>}/>\r\n                <Route exact path=\"/about\" element={<About/>}/>\r\n                <Route element={<p>Hmmm. I can't seem to find what you want.</p>}/>\r\n            </Routes>\r\n            </main>\r\n            </BrowserRouter>\r\n        );\r\n  }\r\n  \r\n  export default AppRoutes;\r\n  \r\n","import AppRoutes from './BrowserRoutesComponents/AppRoutes';\r\nimport React from \"react\";\r\nimport UserContext from './UserContext';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RepnileApi from './api';\r\n\r\n// import { update } from '../../backend/models/user';\r\n\r\n\r\nfunction App() {\r\n  const [currUser, setCurrUser] = useLocalStorage(\"currUser\", undefined);\r\n  const [currToken, setCurrToken] = useLocalStorage(\"currToken\", undefined);\r\n  // const navigate = useNavigate()\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // if (isLoading) {\r\n  //   return <p>Loading &hellip;</p>;\r\n  // }\r\n  if (currToken) RepnileApi.addToken(currToken);\r\n\r\nasync function login(userData) {\r\n    let user = await RepnileApi.loginUser(userData);\r\n    setCurrUser(user.username)\r\n    setCurrToken(user.token)\r\n  }\r\n\r\nasync function logout(){\r\n  setCurrUser(undefined)\r\n  setCurrToken(undefined)\r\n  localStorage.clear()\r\n  RepnileApi.logoutUser()\r\n}\r\n\r\n  return (\r\n    <UserContext.Provider value = {{username: currUser, token: currToken}}>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <AppRoutes login={login} logout={logout} />\r\n      </header>\r\n    </div>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}